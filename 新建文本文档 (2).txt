%   Step 2: Calculation of X1,X2,X3 in ICN (X1=X2)

%   Load Impedance data ZN is read from files in Disk D
%   Please make sure that Step 1 has been executed before executing this code

%   Impedance compression range are set in row 94

%   Calculation results "count" are plotted in Figure 1 and command window, where you can find optimal X1,X2,X3 at highest "count"


clc
clear all

% Read Impdance Data Files (Generated By Step 1)
impedance=dlmread('D:\impedance.txt');
angle=dlmread('D:\angle.txt');
zo=dlmread('D:\impedance_load.txt');
so=dlmread('D:\angle_load.txt');
f=10E6;
[rows,columns]=size(impedance);

% Set Impedance Compression Range
Zmin=15;
Zmax=35;
fmin=30;
fmax=60;

% Set Scan Parameters
steps=10;

nu=0;
for X1=-100:10:0
                nu=nu+1;
                lu1(nu)=X1;
                X2=X1;
                mu=0;
                for X3=0:10:100
                    mu=mu+1;
                    lu2(mu)=X3;
                    count(mu,nu)=0;
                    t=0;            %数组指针
                    for t=1:1:columns
                        zN=impedance(t);
                        s=angle(t);
                        m=0;
                        flag=0;
                        for fai1=0:pi/30:pi
                            m=m+1;
                            q(m)=fai1/pi*180;
                            m1=0;
                            for fai2=0:-pi/30:-pi
                                m1=m1+1;
                                p(m1)=fai2/pi*180;
                                iN=100/(zN*cos(s))^2;             
                                iU=iN/(cos(fai1)-sin(fai1)/tan(fai2)); 
                                iL=iN/(cos(fai2)-sin(fai2)/tan(fai1)); 
                                i1x=iU*cos(fai1);
                                i1y=iU*sin(fai1);
                                i2x=(1+X2/X3)*iL*cos(fai2)+iN*zN*sin(s)/X3;
                                i2y=(1+X2/X3)*iL*sin(fai2)-iN*zN*cos(s)/X3;
                                I1=sqrt(i1x^2+i1y^2);
                                I2=sqrt(i2x^2+i2y^2);
                                if(i1y>0) si1=acos(i1x/I1)*180/pi;
                                else si1=-acos(i1x/I1)*180/pi;end
                                if(i2y>0) si2=acos(i2x/I2)*180/pi;
                                else si2=-acos(i2x/I2)*180/pi;end
                                v1x=iN*zN*cos(s);             
                                v1y=iN*zN*sin(s);              
                                v2x=-(X1+X2+X1*X2/X3)*i2y+(1+X1/X3)*iN*zN*cos(s);             
                                v2y=(X1+X2+X1*X2/X3)*i2x+(1+X1/X3)*iN*zN*sin(s);                  
                                V1=sqrt(v1x^2+v1y^2);                               
                                V2=sqrt(v2x^2+v2y^2);                                
                                if(v1y>0) sv1=acos(v1x/V1)*180/pi;
                                else sv1=-acos(v1x/V1)*180/pi;end
                                if(v2y>0) sv2=acos(v2x/V2)*180/pi;
                                else sv2=-acos(v2x/V2)*180/pi;end
                                d1=sv1-si1;                        
                                d2=sv2-si2;                        
                                a1=V1/I1;                          
                                a2=V2/I2;    
                                
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  Here to set impedance compression range %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    
                                range=logical(a2>Zmin && a2<Zmax && d2<fmax && d2>fmin && a1>Zmin && a1<Zmax && d1<fmax && d1>fmin);
  
   %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%                 
                                
                                if(range) flag=1;break;break;end
                            end
                        end
                        if(flag==1) count(mu,nu)=count(mu,nu)+1;end
        end
    end
end
% Plot of scan result "score"
contourf(lu1,lu2,count/columns*100)
colorbar
xlabel('X1,X2')
ylabel('X3')

% Optimal Parameters
[rowopt,colopt]=find(count==max(max(count)),1);
XL2opt=lu2(rowopt);
XL1opt=lu1(colopt);
    if (XL1opt<0) fprintf('   C1=%.2f pF   X1=%.2f \n ',-1./XL1opt/(2*pi*f)*1E12,XL1opt);
    else  fprintf('  L1=%.2f nH   X1=%.2f \n ',XL1opt./(2*pi*f)*1E9,XL1opt);end
    if (XL2opt<0) fprintf(' C2=%.2f pF   X2=%.2f \n ',-1./XL2opt/(2*pi*f)*1E12,XL2opt);
    else  fprintf('  L2=%.2f nH   X2=%.2f \n ',XL2opt./(2*pi*f)*1E9,XL2opt);end
    fprintf('  Max area = %.2f%% \n ',max(max(count/columns*100)));
    
% End of Code
% Revised ON 2022.04.25
% hit_liuchang@outlook.com