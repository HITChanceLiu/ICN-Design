
%   Step 5: Calculation of control parameters : VU and VL

%   Load Impedance data ZN is read from files "impedance" and "angle" in Disk D 
%   Control variable data iU', iL' are read from files "Lower_phase_control" and "Upper_phase_control" in Disk D
%   Please make sure that Step 1 and Step 4 has been executed before executing this code

%   Impedance compression range are set in row 94
%   XU1 and XU2 are calculated from Step 2,XL1 and XL2 are from Step 3, please copy them and paste in the corresponding position

%   Control variables are generated and exported to Disk D, Make sure that the files with the same name in disk D has been emptied before executing the code


clc
clear all

% Read Impdance Data Files (Generated By Step 1)
impedance=dlmread('D:\impedance.txt');
angle=dlmread('D:\angle.txt');
zo=dlmread('D:\impedance_load.txt');
so=dlmread('D:\angle_load.txt');
% Read Control Data Files (Generated By Step 4)
f1=dlmread('D:\Upper_phase_control.txt');
f2=dlmread('D:\Lower_phase_control.txt');
[rows,columns]=size(f1);

% Set Parameters
XU1=60;
XU2=-75;
XL1=40;
XL2=-20;
Po=25;

% Calculation Progress
X1=XU1;
X2=XU2;
X11=XL1;
X22=XL2;
for t=1:1:rows
    for k=1:1:columns
        zN=impedance(t);
        s=angle(t);
        zo1=zo(t);
        so1=so(t)/pi*180;
        fai1=f1(t,k)/180*pi;
        fai2=f2(t,k)/180*pi;
        iN=sqrt(2.56*Po*2/zN/cos(s));              
        iU=iN/(cos(fai1)-sin(fai1)/tan(fai2)); 
        iL=iN/(cos(fai2)-sin(fai2)/tan(fai1)); 
        i1x=iU*cos(fai1)+iN*zN*sin(s)/X2;
        i1y=iU*sin(fai1)-iN*zN*cos(s)/X2;
        i2x=iL*cos(fai2)+iN*zN*sin(s)/X22;
        i2y=iL*sin(fai2)-iN*zN*cos(s)/X22;
        I1=sqrt(i1x^2+i1y^2);
        I2=sqrt(i2x^2+i2y^2);
        if(i1y>0) si1=acos(i1x/I1)*180/pi;
        else si1=-acos(i1x/I1)*180/pi;end
        if(i2y>0) si2=acos(i2x/I2)*180/pi;
        else si2=-acos(i2x/I2)*180/pi;end
        v2x=(1+X11/X22)*iN*zN*cos(s)-iL*X11*sin(fai2)+0.7*i2x;                  
        v2y=(X11/X22+1)*iN*zN*sin(s)+iL*X11*cos(fai2)+0.7*i2y;               
        v1x=(X1/X2+1)*iN*zN*cos(s)-iU*X1*sin(fai1)+0.9*i1x;                 
        v1y=(X1/X2+1)*iN*zN*cos(s)+iU*X1*cos(fai1)++0.9*i1x;               
        V1=sqrt(v1x^2+v1y^2);                               
        V2=sqrt(v2x^2+v2y^2);                             
        if(v1y>0) sv1=acos(v1x/V1)*180/pi;
        else sv1=-acos(v1x/V1)*180/pi;end
        if(v2y>0) sv2=acos(v2x/V2)*180/pi;
        else sv2=-acos(v2x/V2)*180/pi;end
        d1=sv1-si1;                
        d2=sv2-si2;             
        a1=V1/I1;                    
        a2=V2/I2;                        
        fdiff=sv1-sv2;
        if(fdiff>180) fdiff=fdiff-360;end

        fin(t,1)=zo1;
        fin(t,2)=so1;
        fin(t,k+2)=V1;
        fin(t,k+3)=V2;
        fin(t,k+4)=fdiff;
        fin(t,k+5)=V1/V2;
        B=dataset({fin,'Zo','angleo','VU','VL','phase','vratio'});
    end
end

xlswrite('D:\final_solution.xls',fin,'sheetname');

fprintf(' Finished \n ');
fprintf(' In table "final_solution", Columns Represent: \n      Zo \n     âˆ Zo \n     VU \n     VL \n     phase difference \n     VU/VL \n"')

    
% End of Code
% Revised ON 2022.04.25
% hit_liuchang@outlook.com