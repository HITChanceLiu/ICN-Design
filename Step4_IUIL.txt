
%   Step 4: Calculation of control parameters : angles of iU', iL'

%   Load Impedance data ZN is read from files in Disk D
%   Please make sure that Step 1 has been executed before executing this code

%   Impedance compression range are set in row 85
%   XU1 and XU2 are calculated from Step 2,XL1 and XL2 are from Step 3, please copy them and paste in the corresponding position

%   Control variables are generated and exported to Disk D, Make sure that the files with the same name in disk D has been emptied before executing the code

clc
clear all

% Read Impdance Data Files (Generated By Step 1)
impedance=dlmread('D:\impedance.txt');
angle=dlmread('D:\angle.txt');
zo=dlmread('D:\impedance_load.txt');
so=dlmread('D:\angle_load.txt');
f=10E6;
[rows,columns]=size(impedance);

% Set Impedance Compression Range
Zmin=15;
Zmax=35;
fmin=30;
fmax=60;

% Set Parameters
XU1=60;
XU2=-75;
XL1=40;
XL2=-20;

% Calculation Progress
count=0;
X1=XU1;
X2=XU2;
X11=XL1;
X22=XL2;
for t=1:1:columns
    zN=impedance(t);
    s=angle(t);
    m=0;
    k=0;
    flag=0;
    subplot(2,1,2);plot(zN,s/pi*180,'.k','MarkerSize',10);hold on;
    for fai1=0:pi/30:pi
        m=m+1;
        q(m)=fai1/pi*180;
        m1=0;
        for fai2=0:-pi/30:-pi
            m1=m1+1;
            p(m1)=fai2/pi*180;
            iN=100/(zN*cos(s))^2;             
            iU=iN/(cos(fai1)-sin(fai1)/tan(fai2)); 
            iL=iN/(cos(fai2)-sin(fai2)/tan(fai1)); 
            i1x=iU*cos(fai1)+iN*zN*sin(s)/X2;
            i1y=iU*sin(fai1)-iN*zN*cos(s)/X2;
            i2x=iL*cos(fai2)+iN*zN*sin(s)/X22;
            i2y=iL*sin(fai2)-iN*zN*cos(s)/X22;
            I1=sqrt(i1x^2+i1y^2);
            I2=sqrt(i2x^2+i2y^2);
            if(i1y>0) si1=acos(i1x/I1)*180/pi;
            else si1=-acos(i1x/I1)*180/pi;end
            if(i2y>0) si2=acos(i2x/I2)*180/pi;
            else si2=-acos(i2x/I2)*180/pi;end
            v2x=(1+X11/X22)*iN*zN*cos(s)-iL*X11*sin(fai2)+0.7*i2x;             
            v2y=(X11/X22+1)*iN*zN*sin(s)+iL*X11*cos(fai2)+0.7*i2y;              
            v1x=(X1/X2+1)*iN*zN*cos(s)-iU*X1*sin(fai1)+0.9*i1x;             
            v1y=(X1/X2+1)*iN*zN*cos(s)+iU*X1*cos(fai1)++0.9*i1x;                  
            V1=sqrt(v1x^2+v1y^2);                               
            V2=sqrt(v2x^2+v2y^2);                                
            if(v1y>0) sv1=acos(v1x/V1)*180/pi;
            else sv1=-acos(v1x/V1)*180/pi;end
            if(v2y>0) sv2=acos(v2x/V2)*180/pi;
            else sv2=-acos(v2x/V2)*180/pi;end
            d1=sv1-si1;                        
            d2=sv2-si2;                        
            a1=V1/I1;                          
            a2=V2/I2;    

    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  Here to set impedance compression range %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    
                                range=logical(a2>Zmin && a2<Zmax && d2<fmax && d2>fmin && a1>Zmin && a1<Zmax && d1<fmax && d1>fmin);
  
   %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%                 
                                         
            if(range&&k<1) k=k+1; solution_up(t,k)=fai1/pi*180; solution_low(t,k)=fai2/pi*180; flag=1;subplot(2,1,1);plot(a1,d1,'.');hold on;subplot(2,1,2);plot(zN,s/pi*180,'.r','MarkerSize',12);hold on;end

        end
    end
    
if(flag==1) count=count+1;end
end
dlmwrite('D:\Upper_phase_control.txt',solution_up);
dlmwrite('D:\Lower_phase_control.txt',solution_low);
fprintf(' solvable area=%f \n ',count/columns*100)

f=10E+6;
w=2*pi*f;
LU1=XU1/w;
CU2=-1/XU2/w;
LL1=XL1/w;
CL2=-1/X22/w;
fprintf(' LU1=%f nH \n  CU2=%f pF \n  LL1=%f nH \n  CL2=%f pF \n ',LU1*1E9,CU2*1E12,LL1*1E9,CL2*1E12)

    
% End of Code
% Revised ON 2022.04.25
% hit_liuchang@outlook.com